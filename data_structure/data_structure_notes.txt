

1.线性数据结构
    一旦一个数据项被添加，它相对于前后元素一直保持该位置不变。诸如此类的数据结构被称为线性数据结构
    线性数据结构有两端，有时被称为左右，某些情况被称为前后

2.栈
    栈（有时称为“后进先出栈”）是一个项的有序集合，其中添加移除新项总发生在同一端。这一
    端通常称为“顶部”。与顶部对应的端称为“底部”，栈的底部很重要，因为在栈中靠近底部的
    项是存储时间最长的

    排序规则：
        LIFO 后进先出即最近添加的项是最先会被移除

    相关操作：
        Stack()     创建一个空的新栈，它不需要参数，并返回一个空栈
        push(item)  将一个新项添加到栈的顶部。它需要item做参数并不返回任何内容
        pop()       从栈中删除顶部项。它不需要参数并返回item，栈被修改
        peek()      从栈返回顶部项，但不会删除它。不需要参数，不修改栈
        isEmpty()   测试栈是否为空。不需要参数，并返回布尔值
        size()      返回栈中的 item 数量。不需要参数，并返回一个整数

    示例：
        1)编程语言中语法的检测
          例如，在 Python 中，方括号 [ 和 ] 用于列表，花括号 { 和 } 用于字典
             括号 ( 和 ) 用于元祖和算术表达式。只要每个符号都能保持自己的开始
             和结束关系，就可以混合符号

        2)十进制转换成二进制

3.队列
    队列是项的有序结合，其中添加新项的一端称为队尾，移除项的一端称为队首
    当一个元素从队尾进入队列时，一直向队首移动，直到它成为下一个需要移除的元素为止

    排序规则:
        FIFO 先进先出

    相关操作：
        Queue()         创建一个空的新队列，它不需要参数，并返回一个空队列
        enqueue(item)   将新项添加到队尾，它需要item作为参数，并不返回任何内容
        dequeue()       从队首移除项，它不需要参数并返回item，队列被修改
        isEmpty()       查看队列是否为空，它不需要参数，并返回布尔值
        size()          返回队列中的项数，它不需要参数，并返回一个整

    示例：
        1)打印机 打印文档

4.双端队列
    deque（也称为双端队列）是与队列类似的项的有序集合
    它有两个端部，首部和尾部，并且项在集合中保持不变，deque不同的地方是添加和删除项是非限制性的
        可以在前面或后面添加新项
        可以从任一端移除现有项
    在某种意义上，这种混合线性结构提供了单个数据结构中的栈和队列的所有能力

    相关操作：
        Deque()         创建一个空的新deque，它不需要参数，并返回空的deque
        addFront(item)  将一个新项添加到deque的首部，它需要item参数并不返回任何内容
        addRear(item)   将一个新项添加到deque的尾部，它需要item参数并不返回任何内容
        removeFront()   从deque中删除首项，它不需要参数并返回item，deque被修改
        removeRear()    从deque中删除尾项，它不需要参数并返回item，deque被修改
        isEmpty()       测试deque是否为空，它不需要参数，并返回布尔值
        size()          返回deque中的项数，它不需要参数，并返回一个整数

    示例：
        1)回文搜索

5.列表
    列表是一个强大但简单的收集机制，列表是一个强大但简单的收集机制

    示例：
        1)无序列表：链表
        2)Node 类

总结：
    线性数据结构以有序的方式保存它们的数据
    栈是维持LIFO，后进先出，排序的简单数据结构
    栈的基本操作是push，pop和isEmpty
    队列是维护FIFO（先进先出）排序的简单数据结构
    队列的基本操作是enqueue，dequeue和isEmpty
    前缀，中缀和后缀都是写表达式的方法
    栈对于设计计算解析表达式算法非常有用
    栈可以提供反转特性
    队列可以帮助构建定时仿真
    模拟使用随机数生成器来创建真实情况，并帮助我们回答“假设”类型的问题
    Deques是允许类似栈和队列的混合行为的数据结构
    deque的基本操作是addFront，addRear，removeFront，removeRear和isEmpty
    列表是项的集合，其中每个项目保存相对位置
    链表实现保持逻辑顺序，而不需要物理存储要求
    修改链表头是一种特殊情况



